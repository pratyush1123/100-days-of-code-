void traverse(Node* root, vector<int> &ans){
    if(!root)return;
    
    if(!(root -> left) and (root -> right)) ans.push_back(root -> right -> data);
    if((root -> left) and !(root -> right)) ans.push_back(root -> left -> data);
    
    traverse(root -> left, ans);
    traverse(root -> right, ans);
}
vector<int> noSibling(Node* node)
{
    vector<int> ans;
    traverse(node, ans);
    if(ans.size() < 1) ans.push_back(-1);
    sort(ans.begin(), ans.end());
    return ans;
}
